% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solmfd_ftns.R
\name{sol_mfd_points}
\alias{sol_mfd_points}
\title{solution manifold points sampling}
\usage{
sol_mfd_points(
  N,
  phi,
  d,
  s,
  prior = "gaussian",
  gamma = 0.005,
  Lambda = NULL,
  tol1 = 1e-07,
  tol2 = 1e-15,
  num_iter = 1e+05,
  ...
)
}
\arguments{
\item{N}{int: number of output data}

\item{phi}{target function: R^d -> R^s}

\item{d}{int: input dimension}

\item{s}{int: output dimension}

\item{prior}{str: type of prior distribution. "Gaussian", "t" are currently provided}

\item{gamma}{double: parameter of gradient descent step size}

\item{Lambda}{mat (s * s): p.d. function. Identity by default}

\item{tol1}{double: convergence threshold for manifold convergence}

\item{tol2}{double: convergence threhold for gradient descent algorithm. Should be smaller than tol1}

\item{num_iter}{int: if algorithm does not converge, it iterates for num_iter times.}

\item{...}{additional parameter for prior distribution if needed. If not provided, each distribution has its default}
}
\value{
final_points: mat (N * d): N number of points in R^d, which are points in solution manifold.
}
\description{
solution manifold points sampling
}
\examples{
set.seed(10)
N = 10
phi = function(x) {return(pnorm(2, x[[1]], x[[2]]) - pnorm(-5, x[[1]], x[[2]]) - 0.5)}
d = 2
s = 1
res_points = sol_mfd_points(N, phi, d, s, prior = "uniform")
head(res_points)
phi(res_points[1, ]) # are they on solution manifold?
plot(res_points, xlab = "mean", ylab = "sigma", type = 'o') # how they are distributed
}
